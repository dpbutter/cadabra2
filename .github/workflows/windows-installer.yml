# Create Windows installer on a github release event.  This assumes
# that the cadabra version is the same as the release name, and it
# will attempt to add the installer file to the release assets.

name: Windows 11 installer

# on: [push]

on:
  release:
    types: [created]

defaults:
    run:
      shell: msys2 {0}

jobs:
  msys2-ucrt64:
    strategy:
      matrix:
        include:
          - os: windows-2022
            name: x86_64
            display-name: "Windows 11 x86_64"
            msystem: ucrt64
            midfix: ucrt-x86_64
          - os: windows-11-arm
            name: arm64
            msystem: clangarm64
            midfix: clang-aarch64
            display-name: "Windows 11 arm64"
    runs-on: ${{ matrix.os }}
    name: Windows 11
    defaults:
      run:
        shell: msys2 {0}

    steps:
    - name: Install WiX v4/v5 Tool
      run: |
        dotnet tool install --tool-path c:\WiX\bin wix --version 5.0.2
        c:\WiX\bin\wix extension add --global WixToolset.UI.wixext/5.0.2
      shell: pwsh

    - name: Add WiX toolkit to PATH
      shell: bash
      run: |
        echo "WiX installed at ${WIX}, hopefully..."
        echo "Listing C:/WiX/bin"
        ls "C:/WiX/bin"
        echo "Listing Program Files (x86):"
        ls "C:/Program Files (x86)/"
        echo "Listing Program Files:"        
        ls "C:/Program Files/"
        echo "${WIX}bin" >> $GITHUB_PATH

    - uses: msys2/setup-msys2@v2
      with:
        msystem: ${{ matrix.msystem }}
        update: true
        install: >-
          curl
          git
          mingw-w64-${{ matrix.midfix }}-gcc
          mingw-w64-${{ matrix.midfix }}-python
          mingw-w64-${{ matrix.midfix }}-gtkmm3
          mingw-w64-${{ matrix.midfix }}-boost    
          mingw-w64-${{ matrix.midfix }}-sqlite3
          mingw-w64-${{ matrix.midfix }}-cmake
          mingw-w64-${{ matrix.midfix }}-python-matplotlib
          mingw-w64-${{ matrix.midfix }}-python-sympy
          mingw-w64-${{ matrix.midfix }}-github-cli
          
    - name: Authenticate GitHub CLI
      run: gh auth setup-git
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
    - uses: actions/checkout@master
      name: Checkout source
      
    - name: Build
      run: |
        mkdir build
        cd build
        # Turn off searching Python in the registry, as that contains the
        # windows Python which is not the MSYS python that we want to use.
        cmake -DPython_FIND_REGISTRY=NEVER ..
        ninja
        ninja install
        cpack

    - name: Upload WiX log file
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: wix-${{ matrix.name }}.log
        path: build/_CPack_Packages/win64/WIX/wix.log
        retention-days: 2

    - name: Set version variables from output of cmake
      run: |
        VER=$(cat build/VERSION)
        echo "VERSION=$VER" >> $GITHUB_ENV
        GITVER=$(cat build/GIT_TAG_VERSION)
        echo "GIT_TAG_VERSION=$GITVER" >> $GITHUB_ENV

    - name: Upload release assets
      run: |
        gh release upload "${{ env.GIT_TAG_VERSION }}" build/cadabra2-${{ env.VERSION }}-win64.msi --clobber
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

