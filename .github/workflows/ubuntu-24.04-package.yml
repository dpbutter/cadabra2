# Create an Ubuntu 24.04 package on a github release event.
# This assumes that the cadabra version is the same as the
# release name, and it will attempt to add the .deb file
# to the release assets.

name: Ubuntu-24.04 package

# on: [push]

on:
  release:
    types: [created]

jobs:
  build:

    strategy:
      matrix:
        include:
          - os: ubuntu-24.04
            name: x86_64
            display-name: "Ubuntu 24.04 x86_64"
          - os: ubuntu-24.04-arm
            name: arm64
            display-name: "Ubuntu 24.04 arm64"
    runs-on: ${{ matrix.os }}
    
    steps:
    - uses: actions/checkout@v3

#    - name: Exit if not on devel branch
#      if: github.ref != 'refs/heads/devel'
#      run: exit 1
      
    - name: Set up GitHub CLI
      run: |
        sudo apt-get update
        sudo apt-get install -y gh

    - name: Authenticate GitHub CLI
      run: gh auth setup-git
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
    - name: Get dependencies
      run:  sudo apt-get update && sudo DEBIAN_FRONTEND=noninteractive apt-get install git cmake ninja-build python3-dev g++ libpcre3 libpcre3-dev libgmp3-dev libgtkmm-3.0-dev libboost-all-dev libgmp-dev libsqlite3-dev uuid-dev libmpfr-dev libmpc-dev libtbb-dev catch2 && python3 --version && which python3 && python3 -m pip install --upgrade pip && python3 -m pip install wheel && python3 -m pip install sympy gmpy2 numpy

    - name: configure
      run:  mkdir build && cd build && cmake -G Ninja -DPACKAGING_MODE=ON -DENABLE_MATHEMATICA=OFF -DCMAKE_INSTALL_PREFIX=/usr ..
      
    - name: Make
      run:  cd build && cmake --build .
      
    - name: Create the .deb package
      run:  cd build && cpack
      
    - name: Set version variables from output of cmake
      run: |
        VER=$(cat build/VERSION)
        echo "VERSION=$VER" >> $GITHUB_ENV

    - name: Upload Release Assets
      if:   github.event_name == 'release'
      run: |
        gh release upload "${{ env.VERSION }}" build/cadabra2-${{ env.VERSION }}-ubuntu-24.04-noble-${{ matrix.name }}.deb --clobber
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Store package as build artifact
      uses: actions/upload-artifact@v4
      if:   github.event_name == 'push'
      with:
        name: cadabra2-ubuntu-24.04-noble-${{ matrix.name }}.deb
        path: build/cadabra2-${{ env.VERSION }}-ubuntu-24.04-noble.deb


  test:
    needs: build
    runs-on: ubuntu-24.04

    steps:
    - name: Install prerequisites for testing
      run: |
        sudo apt install xvfb imagemagick
        sudo apt-mark hold firefox
        
    - name: Get and install package (release mode)
      if:   github.event_name == 'release'
      run: |
        export VERSION=$(curl -s https://api.github.com/repos/kpeeters/cadabra2/releases|& jq .[0].tag_name -r)
        export DEBNAME=cadabra2-${VERSION}-ubuntu-24.04-noble-x86_64.deb
        wget https://github.com/kpeeters/cadabra2/releases/download/${VERSION}/${DEBNAME}
        sudo apt -y update
        sudo apt -y upgrade
        sudo apt -y install ./${DEBNAME}

    - name: Download package (push mode)
      uses: actions/download-artifact@v4
      if:   github.event_name == 'push'
      with:
        name: cadabra2-ubuntu-24.04-noble-x86_64.deb

    - name: Install package (push mode)
      if:   github.event_name == 'push'
      run: |
        ls -la
        sudo apt -y update
        sudo apt -y upgrade
        sudo apt -y install ./cadabra2*.deb

    - name: Test simple cli run
      run:  printf "import sys\nprint(sys.path)\nimport cdb.main\nex:=(A+B) (C+D);\ndistribute(ex);\nquit()\n" > tst.cdb && cadabra2 tst.cdb

    - name: Test gtk app launch and take screenshot
      run: |
        MESA_LOADER_DRIVER_OVERRIDE=llvmpipe LIBGL_ALWAYS_SOFTWARE=1 xvfb-run -a -s "-screen 0 1920x1080x24 -ac" cadabra2-gtk -n &
        APP_PID=$!
        sleep 10
        
        if kill -0 $APP_PID 2>/dev/null; then
          echo "Application started successfully"
          DISPLAY=:99 import -window root screenshot.png
          kill $APP_PID
          exit 0
        else
          echo "Application failed to start"
          exit 1
        fi

    - name: Upload screenshot
      uses: actions/upload-artifact@v4
      with:
        name: app-screenshot-ubuntu-24.04
        path: screenshot.png
